apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  kafka-broker: kafka
  kafka-broker-port: "9092"
  zookeeper: kafka-zookeeper
  zookeeper-port: "2181"
  kafka-topic-name: test
  schema-registry: schema-registry
  schema-registry-port: "8081"
# consumer definition
  consumer-group-id-1: test-group
  consumer-group-id-2: sample-group
# consumer deserializer
# consumer key deserializer
  key-string-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
  key-avro-deserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
# consumer value deserializer
  value-string-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
  value-avro-deserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
# producer serializer
# producer key serializer
  key-string-serializer: "org.apache.kafka.common.serialization.StringSerializer"
  key-avro-serializer: "io.confluent.kafka.serializers.KafkaAvroSerializer"
# producer value serializer
  value-string-serializer: "org.apache.kafka.common.serialization.StringSerializer"
  value-avro-serializer: "io.confluent.kafka.serializers.KafkaAvroSerializer"
# stream serde
  default-key-string-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  default-value-string-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  auto-offset-reset: earliest
  message-per-request: "10"
  partition-no-0: "0" 
  partition-no-1: "1" 
  partition-no-2: "2" 
  partition-no-3: "3" 
  partition-no-4: "4" 
  partition-no-5: "5" 
  partition-no-6: "6" 
  partition-no-7: "7" 
  partition-no-8: "8" 
  partition-no-9: "9" 
  partition-no-10: "10" 
